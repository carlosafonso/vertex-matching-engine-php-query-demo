<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: match_service.proto

namespace Google\Cloud\Aiplatform\Container\V1beta1\MatchResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.cloud.aiplatform.container.v1beta1.MatchResponse.Neighbor</code>
 */
class Neighbor extends \Google\Protobuf\Internal\Message
{
    /**
     * The ids of the matches.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * The distances of the matches.
     *
     * Generated from protobuf field <code>double distance = 2;</code>
     */
    protected $distance = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           The ids of the matches.
     *     @type float $distance
     *           The distances of the matches.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\MatchService::initOnce();
        parent::__construct($data);
    }

    /**
     * The ids of the matches.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * The ids of the matches.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * The distances of the matches.
     *
     * Generated from protobuf field <code>double distance = 2;</code>
     * @return float
     */
    public function getDistance()
    {
        return $this->distance;
    }

    /**
     * The distances of the matches.
     *
     * Generated from protobuf field <code>double distance = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setDistance($var)
    {
        GPBUtil::checkDouble($var);
        $this->distance = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Neighbor::class, \Google\Cloud\Aiplatform\Container\V1beta1\MatchResponse_Neighbor::class);

